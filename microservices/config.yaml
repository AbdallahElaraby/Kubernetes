apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  labels:
    app: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  labels:
    app: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 8080
---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  labels:
    app: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  labels:
    app: productcatalogservice
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - protocol: TCP
    port: 3550
    targetPort: 3550
---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  labels:
    app: paymentservice
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name : DISABLE_PROFILER
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  labels:
    app: paymentservice
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
  - protocol: TCP
    port: 50051
    targetPort: 50051
---




apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  labels:
    app: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
        ports:
        - containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name : DISABLE_PROFILER
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  labels:
    app: currencyservice
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - protocol: TCP
    port: 7000
    targetPort: 7000
---





apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  labels:
    app: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  labels:
    app: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - protocol: TCP
    port: 50051
    targetPort: 50051
---





apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  labels:
    app: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  labels:
    app: adservice
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - protocol: TCP
    port: 9555
    targetPort: 9555
---




apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  labels:
    app: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
        ports:
        - containerPort: 7070
        env:
        - name: PORT
          value: "7070"
        - name: REDIS_ADDR
          value: "rediscart:6379"

---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  labels:
    app: cartservice
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - protocol: TCP
    port: 7070
    targetPort: 7070
---





apiVersion: apps/v1
kind: Deployment
metadata:
  name: rediscart
  labels:
    app: rediscart
spec:
  selector:
    matchLabels:
      app: rediscart
  template:
    metadata:
      labels:
        app: rediscart
    spec:
      containers:
      - name: service
        image: redis:alpine
        ports:
        - containerPort: 6379
        volumeMounts:
          - mountPath: /data
            name: redis-data
      volumes:
        - name: redis-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: rediscart
  labels:
    app: rediscart
spec:
  type: ClusterIP
  selector:
    app: rediscart
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  labels:
    app: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: PAYMENT_SERVICE_ADDR
          value: "paymentservice:50051"
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  labels:
    app: checkoutservice
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - protocol: TCP
    port: 5050
    targetPort: 5050
---





apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendationservice:8080"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkoutservice:5050"
        - name: AD_SERVICE_ADDR
          value: "adservice:9555"
        - name: SHOPPING_ASSISTANT_SERVICE_ADDR
          value: "shoppingassistantservice:80"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30010
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: shoppingassistantservice
  labels:
    app: shoppingassistantservice
spec:
  selector:
    matchLabels:
      app: shoppingassistantservice
  template:
    metadata:
      labels:
        app: shoppingassistantservice
    spec:
      containers:
      - name: service
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shoppingassistantservice:v0.10.2
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: PROJECT_ID
          value: "your-google-cloud-project-id"
        - name: REGION
          value: "your-region"
        - name: ALLOYDB_DATABASE_NAME
          value: "your-database-name"
        - name: ALLOYDB_TABLE_NAME
          value: "your-table-name"
        - name: ALLOYDB_CLUSTER_NAME
          value: "your-cluster-name"
        - name: ALLOYDB_INSTANCE_NAME
          value: "your-instance-name"
        - name: ALLOYDB_SECRET_NAME
          value: "your-secret-name"

      
---
apiVersion: v1
kind: Service
metadata:
  name: shoppingassistantservice
spec:
  selector:
    app: shoppingassistantservice
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
